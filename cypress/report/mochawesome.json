{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2022-08-17T07:01:28.788Z",
    "end": "2022-08-17T07:01:33.989Z",
    "duration": 5201,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "128efb20-24c8-465d-86f6-dcc4f31b50da",
      "title": "",
      "fullFile": "cypress/e2e/study-smarter.cy.js",
      "file": "cypress/e2e/study-smarter.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "26b9a8a3-b026-46bf-b864-2d02013e020f",
          "title": "Study-smater Tests:",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "API Test: Should able to create new user account",
              "fullTitle": "Study-smater Tests: API Test: Should able to create new user account",
              "timedOut": null,
              "duration": 1743,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: `${Cypress.env('API_BASE_URL')}/users/`,\n  // baseUrl\n  body: {\n    \"email\": email_random,\n    \"platform\": \"web\",\n    \"language\": \"en-gb\",\n    \"signup_location\": \"webapp\",\n    \"delayed_confirmation_possible\": true,\n    \"university\": null,\n    \"course_of_studies\": null,\n    \"password\": password,\n    \"tracking_number\": 2139\n  }\n}).then(response => {\n  // Check response\n  expect(response.status).to.eq(201);\n  expect(response.isOkStatusCode).to.eq(true);\n  expect(response.statusText).to.eq(\"Created\"); // Check response headers\n  expect(response.headers['connection']).to.eq('keep-alive');\n  expect(response.headers['content-type']).to.eq('application/json');\n  expect(response.headers['strict-transport-security']).to.contains('max-age=31536000');\n  expect(response.headers['strict-transport-security']).to.contains('includeSubDomains');\n  expect(response.headers['strict-transport-security']).to.contains('preload'); // Check response body\n  expect(response.body['id']).to.id;\n  expect(response.body['first_name']).to.undefined;\n  expect(response.body['last_name']).to.undefined;\n  expect(response.body['user']['username']).to.eq(email_random);\n  expect(response.body['user']['email']).to.eq(email_random);\n  expect(response.body['user']['email']).to.eq(email_random);\n  expect(response.body['user']['date_joined']).to.string;\n  expect(response.body['token']).to.string; // Schema validation\n  validateSchema(signUpSchema, response.body); // Get response data\n  new_userId = response.body['id'];\n  firstName = response.body['user']['first_name'];\n  lastName = response.body['user']['last_name'];\n  userName = response.body['user']['username'];\n  email = response.body['user']['email'];\n  join_date = response.body['user']['date_joined'];\n  signUpAccessToken = response.body['token'];\n});",
              "err": {},
              "uuid": "0b1cb87e-8c9a-49c3-9d66-8551d1b294b9",
              "parentUUID": "26b9a8a3-b026-46bf-b864-2d02013e020f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "API Test: Should able to login with user credentials",
              "fullTitle": "Study-smater Tests: API Test: Should able to login with user credentials",
              "timedOut": null,
              "duration": 1823,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: `${Cypress.env('API_BASE_URL')}/api-token-auth/`,\n  // baseUrl\n  body: {\n    \"username\": email,\n    \"password\": password\n  }\n}).then(response => {\n  // Check response\n  expect(response.status).to.eq(200);\n  expect(response.isOkStatusCode).to.eq(true);\n  expect(response.statusText).to.eq(\"OK\"); // Check response headers\n  expect(response.headers['connection']).to.eq('keep-alive');\n  expect(response.headers['content-type']).to.eq('application/json');\n  expect(response.headers['strict-transport-security']).to.contains('max-age=31536000');\n  expect(response.headers['strict-transport-security']).to.contains('includeSubDomains');\n  expect(response.headers['strict-transport-security']).to.contains('preload'); // Check response body\n  expect(response.body['token']).to.string;\n  expect(response.body['id']).to.eq(new_userId);\n  expect(response.body['language']).to.eq('en'); // Schema validation\n  validateSchema(loginSchema, response.body); // Get response data\n  old_userId = response.body['id'];\n  loginAccessToken = response.body['token'];\n});",
              "err": {},
              "uuid": "946c058e-0321-4f27-81fa-c0cd8c1693a6",
              "parentUUID": "26b9a8a3-b026-46bf-b864-2d02013e020f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "API Test: Should able to create study set",
              "fullTitle": "Study-smater Tests: API Test: Should able to create study set",
              "timedOut": null,
              "duration": 914,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "token = `Token ${loginAccessToken}`;\ncy.request({\n  method: 'POST',\n  url: `${Cypress.env('API_BASE_URL')}/users/${old_userId}/course-subjects/`,\n  // baseUrl\n  headers: {\n    authorization: token\n  },\n  body: {\n    \"name\": studySetName,\n    \"colorId\": 1,\n    \"shared\": true,\n    \"exam_date\": join_date,\n    \"countries\": [],\n    \"level\": 0\n  }\n}).then(response => {\n  // Check response\n  expect(response.status).to.eq(201);\n  expect(response.isOkStatusCode).to.eq(true);\n  expect(response.statusText).to.eq(\"Created\"); // Check response headers\n  expect(response.headers['connection']).to.eq('keep-alive');\n  expect(response.headers['content-type']).to.eq('application/json');\n  expect(response.headers['strict-transport-security']).to.contains('max-age=31536000');\n  expect(response.headers['strict-transport-security']).to.contains('includeSubDomains');\n  expect(response.headers['strict-transport-security']).to.contains('preload'); // // Check response body\n  expect(response.body['id']).to.id;\n  expect(response.body['colorId']).to.eq(1);\n  expect(response.body['creator_id']).to.id;\n  expect(response.body['breadcrumbs'][0]['name']).to.eq(studySetName);\n  expect(response.body['breadcrumbs'][0]['id']).to.eq(response.body['id']); // Get response data\n  studysetId = response.body['id'];\n});",
              "err": {},
              "uuid": "2a968287-c0ef-4866-aaf2-46763f3966ef",
              "parentUUID": "26b9a8a3-b026-46bf-b864-2d02013e020f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "API Test: Should able to delete study set",
              "fullTitle": "Study-smater Tests: API Test: Should able to delete study set",
              "timedOut": null,
              "duration": 543,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: `${Cypress.env('API_BASE_URL')}/users/${old_userId}/course-subjects/${studysetId}`,\n  // baseUrl\n  headers: {\n    authorization: token\n  }\n}).then(response => {\n  // Check response\n  expect(response.status).to.eq(200);\n  expect(response.isOkStatusCode).to.eq(true);\n  expect(response.statusText).to.eq(\"OK\"); // Check response headers\n  expect(response.headers['connection']).to.eq('keep-alive');\n  expect(response.headers['content-type']).to.eq('application/json');\n  expect(response.headers['strict-transport-security']).to.contains('max-age=31536000');\n  expect(response.headers['strict-transport-security']).to.contains('includeSubDomains');\n  expect(response.headers['strict-transport-security']).to.contains('preload');\n});",
              "err": {},
              "uuid": "5dcc66d4-e1c1-47f2-b0d8-139446a7ba51",
              "parentUUID": "26b9a8a3-b026-46bf-b864-2d02013e020f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b1cb87e-8c9a-49c3-9d66-8551d1b294b9",
            "946c058e-0321-4f27-81fa-c0cd8c1693a6",
            "2a968287-c0ef-4866-aaf2-46763f3966ef",
            "5dcc66d4-e1c1-47f2-b0d8-139446a7ba51"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5023,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/report",
        "overwrite": true,
        "html": true,
        "json": true,
        "autoOpen": false
      },
      "version": "6.2.0"
    }
  }
}